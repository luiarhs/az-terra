trigger:
  - main

stages:
  - stage: Build
    jobs:
      - job: Build
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - task: TerraformTaskV4@4
            displayName: 'Terraform Init'
            inputs:
              provider: 'azurerm'
              command: 'init'
              workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'
              backendServiceArm: 'journey-sc'
              backendAzureRmResourceGroupName: 'journey-rg'
              backendAzureRmStorageAccountName: 'journeytfstate'
              backendAzureRmContainerName: 'prod-tfstate'
              backendAzureRmKey: 'prod.terraform.tfstate'
              # backendAzureRmSasToken: 'SAS_TOKEN'
          # - checkout: self
          # - task: UseDotNet@2
          #   inputs:
          #     packageType: 'sdk'
          #     version: '3.1.x'
          #     installationPath: $(Agent.ToolsDirectory)/dotnet
          # - script: dotnet build --configuration Release
          # - script: dotnet test --configuration Release --no-build
          # - task: PublishTestResults@2
          #   inputs:
          #     testResultsFiles: '**/TestResults/*.trx'
          #     testRunTitle: 'Test Results'
          #     failTaskOnFailedTests: true
          # - task: DotNetCoreCLI@2
          #   inputs:
          #     command: 'publish'
          #     publishWebProjects: true
          #     arguments: '--configuration Release --output $(Build.ArtifactStagingDirectory)'
          #     zipAfterPublish: true
          # - task: PublishBuildArtifacts@1
          #   inputs:
          #     pathtoPublish: '$(Build.ArtifactStagingDirectory)'
          #     artifactName: 'drop'